% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bestNormalize.R
\name{bestNormalize}
\alias{bestNormalize}
\alias{predict.bestNormalize}
\alias{predict.bestNormalize}
\alias{print.bestNormalize}
\title{Calculate and perform best normalizing transformation}
\usage{
bestNormalize(x, allow_orderNorm = TRUE)

\method{predict}{bestNormalize}(object, newdata = NULL, inverse = FALSE,
  ...)

\method{print}{bestNormalize}(x, ...)
}
\arguments{
\item{x}{A vector to normalize}

\item{allow_orderNorm}{set to FALSE if orderNorm should not be applied}

\item{object}{an object of class 'bestNormalize'}

\item{newdata}{a vector of data to be (reverse) transformed}

\item{inverse}{if TRUE, performs reverse transformation}

\item{...}{additional arguments}
}
\value{
A list of class \code{bestNormalize} with elements 

\item{x.t}{transformed original data} 
\item{x}{original data} 
\item{norm_stats}{Pearson's chi-squared normality test statistics / degrees of freedom}
\item{chosen_transform}{info about the transformation (of appropriate class)}

The \code{predict} function returns the numeric value of the transformation
performed on new data, and allows for the inverse transformation as well.
}
\description{
Performs a suite of normalizing transformations, and selects the
  best one on the basis of the Shapiro-Wilks test for normality (i.e., the one 
  with the highest p-value, i.e. the one that shows the least amount of
  evidence against normality).
}
\details{
\code{bestNormalize} estimates the optimal normalizing 
  transformation. This transformation can be performed on new data, and 
  inverted, via the \code{predict} function.
}
\examples{

x <- rgamma(100, 1, 1)

BN_obj <- bestNormalize(x)
BN_obj
p <- predict(BN_obj)
x2 <- predict(BN_obj, newdata = p, inverse = TRUE)

all.equal(x2, x)

}
\seealso{
\code{\link[bestNormalize]{boxcox}},
 \code{\link{lambert}}, 
 \code{\link{orderNorm}},
 \code{\link{yeojohnson}}
}
