% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_orderNorm.R
\name{step_orderNorm}
\alias{step_orderNorm}
\alias{tidy.step_orderNorm}
\title{ORQ normalization (orderNorm) for \code{recipes} implementation}
\usage{
step_orderNorm(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  transform_info = NULL,
  transform_options = list(),
  num_unique = 5,
  skip = FALSE,
  id = rand_id("orderNorm")
)

\method{tidy}{step_orderNorm}(x, ...)
}
\arguments{
\item{...}{One or more selector functions to choose which
variables are affected by the step. See [selections()]
for more details. For the `tidy` method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{transform_info}{A numeric vector of transformation values. This (was transform_info)
is `NULL` until computed by [prep.recipe()].}

\item{transform_options}{options to be passed to orderNorm}

\item{num_unique}{An integer where data that have less possible
values will not be evaluate for a transformation.}

\item{x}{A `step_orderNorm` object.}
}
\value{
An updated version of `recipe` with the new step
 added to the sequence of existing steps (if any). For the
 `tidy` method, a tibble with columns `terms` (the
 selectors or variables selected) and `value` (the
 lambda estimate).
}
\description{
`step_orderNorm` creates a specification of a recipe step
  (see `recipes` package) that will transform data using the best of a suite
  of normalization transformations. **continue here**
}
\details{
The orderNorm transformation can be used to rescale a variable to be more
 similar to a normal distribution. See `?orderNorm` for more information; `step_orderNorm` is 
 the implementation of `orderNorm` in the `recipes` context.
}
\examples{

rec <- recipe(~ ., data = as.data.frame(state.x77))

bn_trans <- step_orderNorm(rec, all_numeric())

bn_estimates <- prep(bn_trans, training = as.data.frame(state.x77))

bn_data <- bake(bn_estimates, as.data.frame(state.x77))

plot(density(state.x77[, "Illiteracy"]), main = "before")
plot(density(bn_data$Illiteracy), main = "after")

tidy(bn_trans, number = 1)
tidy(bn_estimates, number = 1)


}
\references{
Ryan A. Peterson (2019). Ordered quantile normalization: a semiparametric
  transformation built for the cross-validation era. Journal of Applied Statistics, 1-16.
}
\seealso{
\code{\link[bestNormalize]{orderNorm}} \code{\link{bestNormalize}}, [recipe()]
  [prep.recipe()] [bake.recipe()]
}
\concept{preprocessing}
\concept{transformation_methods}
